apiVersion: apps/v1
{{ if .Values.hostNetwork }}
kind: DaemonSet
{{ else }}
kind: Deployment
{{ end }}
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}
    spec:
      {{ if .Values.hostNetwork }}
      hostNetwork: true
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
      {{ end }}
      volumes:
        - name: {{ .Release.Name }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}
        - name: {{ .Release.Name }}-lists
          configMap:
            name: {{ .Release.Name }}-lists
            defaultMode: 420

      containers:
        - name: {{ .Release.Name }}
          image: ghcr.io/pi-hole/pihole:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/bash"
                  - "-c"
                  - "pihole -g"
          volumeMounts:
            - mountPath: /etc/pihole
              name: {{ .Release.Name }}
            - mountPath: /etc/pihole/adlists.list
              name: {{ .Release.Name }}-lists
              subPath: adlists.list
            - mountPath: /etc/pihole/whitelist.txt
              name: {{ .Release.Name }}-lists
              subPath: whitelist.txt
            - mountPath: /etc/pihole/blacklist.txt
              name: {{ .Release.Name }}-lists
              subPath: blacklist.txt
            - mountPath: /etc/pihole/custom.list #Custom DNS A entries
              name: {{ .Release.Name }}-lists
              subPath: custom.list
            {{ if .Values.dhcp.enable }}
            - mountPath: /etc/dnsmasq.d/04-pihole-static-dhcp.conf
              name: {{ .Release.Name }}-lists
              subPath: pihole-static-dhcp.conf
            {{ end }}
            - mountPath: /etc/dnsmasq.d/05-pihole-custom-cname.conf
              name: {{ .Release.Name }}-lists
              subPath: 05-pihole-custom-cname.conf
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_BIND_SERVICE
                - NET_RAW
                - SYS_NICE
                - SYS_TIME
                - CHOWN
          ports:
            {{ if .Values.hostNetwork }}
            - containerPort: {{ .Values.webinterface.port }}
              protocol: TCP
            {{ else }}
            - containerPort: 8080
              protocol: TCP
            {{ end }}
            - containerPort: 53
              protocol: UDP
            - containerPort: 53
              protocol: TCP
            - containerPort: 67
              protocol: UDP
            - containerPort: 123
              protocol: UDP
          env:
            - name: TZ
              value: {{ .Values.timezone | quote }}
            - name: FTLCONF_webserver_port
              value: "8080"
            - name: FTLCONF_webserver_api_password
              valueFrom:
                secretKeyRef:
                  key: webpassword
                  name: {{ .Release.Name }}-secrets
            - name: FTLCONF_dns_upstreams
              {{ if .Values.cloudflareDoh.enable }}
              value: "127.0.0.1#5053;::1#5053"
              {{ else }}
              value: {{ join ";" .Values.dns.servers }}
              {{ end }}
            - name: FTLCONF_dns_cache_size
              value: {{ .Values.dns.cacheSize | quote }}
            {{ if .Values.dhcp.enable }}
            - name: FTLCONF_dhcp_active
              value: "true"
            - name: FTLCONF_dhcp_start
              value: {{ .Values.dhcp.ip.rangeStart | quote }}
            - name: FTLCONF_dhcp_end
              value: {{ .Values.dhcp.ip.rangeEnd | quote }}
            - name: FTLCONF_dhcp_router
              value: {{ .Values.dhcp.ip.router | quote }}
            {{ end }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}

          livenessProbe:
            httpGet:
              {{ if .Values.hostNetwork }}
              port: {{ .Values.webinterface.port }}
              {{ else }}
              port: 8080
              {{ end }}
              path: &probe-uri /admin
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 2
          readinessProbe:
            httpGet:
              {{ if .Values.hostNetwork }}
              port: {{ .Values.webinterface.port }}
              {{ else }}
              port: 8080
              {{ end }}
              path: *probe-uri
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 4

      {{ if .Values.cloudflareDoh.enable }}
        - name: {{ .Release.Name }}-cloudflared
          image: cloudflare/cloudflared:2025.1.0
          imagePullPolicy: IfNotPresent
          args:
            - proxy-dns
          env:
            - name: TUNNEL_DNS_ADDRESS
              value: "0.0.0.0"
            - name: TUNNEL_DNS_PORT
              value: "5053"
            - name: TUNNEL_DNS_UPSTREAM
              value: {{ join "," .Values.cloudflareDoh.upstreams }}
          resources:
{{- toYaml .Values.cloudflareDoh.resources | nindent 12 }}
          ports:
            - containerPort: 5053
      {{ end }}
