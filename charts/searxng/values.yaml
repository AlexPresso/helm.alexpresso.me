searxng:
  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 128Mi

  settings:
    general:
      debug: false
      # displayed name
      instance_name: "SearXNG"
      # For example: https://example.com/privacy
      privacypolicy_url: false
      # use true to use your own donation page written in searx/info/en/donate.md
      # use false to disable the donation link
      donation_url: false
      # mailto:contact@example.com
      contact_url: false
      # record stats
      enable_metrics: true

    # External plugin configuration, for more details see
    #   https://docs.searxng.org/dev/plugins.html
    #
    plugins: []

    brand:
      new_issue_url: https://github.com/searxng/searxng/issues/new
      docs_url: https://docs.searxng.org/
      public_instances: https://searx.space
      wiki_url: https://github.com/searxng/searxng/wiki
      issue_url: https://github.com/searxng/searxng/issues
      # custom:
      #   maintainer: "Jon Doe"
      #   # Custom entries in the footer: [title]: [link]
      #   links:
      #     Uptime: https://uptime.searxng.org/history/darmarit-org
      #     About: "https://searxng.org"

    search:
      # Filter results. 0: None, 1: Moderate, 2: Strict
      safe_search: 0
      # Existing autocomplete backends: "dbpedia", "duckduckgo", "google", "yandex", "mwmbl",
      # "seznam", "startpage", "stract", "swisscows", "qwant", "wikipedia" - leave blank to turn it off
      # by default.
      autocomplete: ""
      # minimun characters to type before autocompleter starts
      autocomplete_min: 4
      # Default search language - leave blank to detect from browser information or
      # use codes from 'languages.py'
      default_lang: "auto"
      # max_page: 0  # if engine supports paging, 0 means unlimited numbers of pages
      # Available languages
      # languages:
      #   - all
      #   - en
      #   - en-US
      #   - de
      #   - it-IT
      #   - fr
      #   - fr-BE
      # ban time in seconds after engine errors
      ban_time_on_fail: 5
      # max ban time in seconds after engine errors
      max_ban_time_on_fail: 120
      suspended_times:
        # Engine suspension time after error (in seconds; set to 0 to disable)
        # For error "Access denied" and "HTTP error [402, 403]"
        SearxEngineAccessDenied: 86400
        # For error "CAPTCHA"
        SearxEngineCaptcha: 86400
        # For error "Too many request" and "HTTP error 429"
        SearxEngineTooManyRequests: 3600
        # Cloudflare CAPTCHA
        cf_SearxEngineCaptcha: 1296000
        cf_SearxEngineAccessDenied: 86400
        # ReCAPTCHA
        recaptcha_SearxEngineCaptcha: 604800

      # remove format to deny access, use lower case.
      # formats: [html, csv, json, rss]
      formats:
        - html

    server:
      limiter: false  # rate limit the number of request on the instance, block some bots
      public_instance: false  # enable features designed only for public instances
      secret_key: "ultrasecretkey"
      # Proxying image results through searx
      image_proxy: false
      default_http_headers:
        X-Content-Type-Options: nosniff
        X-Download-Options: noopen
        X-Robots-Tag: noindex, nofollow
        Referrer-Policy: no-referrer

    ui:
      # Custom static path - leave it blank if you didn't change
      static_path: ""
      static_use_hash: false
      # Custom templates path - leave it blank if you didn't change
      templates_path: ""
      # query_in_title: When true, the result page's titles contains the query
      # it decreases the privacy, since the browser can records the page titles.
      query_in_title: false
      # infinite_scroll: When true, automatically loads the next page when scrolling to bottom of the current page.
      infinite_scroll: false
      # ui theme
      default_theme: simple
      # center the results ?
      center_alignment: false
      # URL prefix of the internet archive, don't forget trailing slash (if needed).
      # cache_url: "https://webcache.googleusercontent.com/search?q=cache:"
      # Default interface locale - leave blank to detect from browser information or
      # use codes from the 'locales' config section
      default_locale: ""
      # Open result links in a new tab by default
      # results_on_new_tab: false
      theme_args:
        # style of simple theme: auto, light, dark
        simple_style: auto
      # Perform search immediately if a category selected.
      # Disable to select multiple categories at once and start the search manually.
      search_on_category_select: true
      # Hotkeys: default or vim
      hotkeys: default

    # Lock arbitrary settings on the preferences page.  To find the ID of the user
    # setting you want to lock, check the ID of the form on the page "preferences".
    #
    # preferences:
    #   lock:
    #     - language
    #     - autocomplete
    #     - method
    #     - query_in_title

    # searx supports result proxification using an external service:
    # https://github.com/asciimoo/morty uncomment below section if you have running
    # morty proxy the key is base64 encoded (keep the !!binary notation)
    # Note: since commit af77ec3, morty accepts a base64 encoded key.
    #
    # result_proxy:
    #   url: http://127.0.0.1:3000/
    #   # the key is a base64 encoded string, the YAML !!binary prefix is optional
    #   key: !!binary "your_morty_proxy_key"
    #   # [true|false] enable the "proxy" button next to each result
    #   proxify_results: true

    # communication with search engines
    #
    outgoing:
      # default timeout in seconds, can be override by engine
      request_timeout: 3.0
      # the maximum timeout in seconds
      # max_request_timeout: 10.0
      # suffix of searx_useragent, could contain information like an email address
      # to the administrator
      useragent_suffix: ""
      # The maximum number of concurrent connections that may be established.
      pool_connections: 100
      # Allow the connection pool to maintain keep-alive connections below this
      # point.
      pool_maxsize: 20
      # See https://www.python-httpx.org/http2/
      enable_http2: true
      # uncomment below section if you want to use a custom server certificate
      # see https://www.python-httpx.org/advanced/#changing-the-verification-defaults
      # and https://www.python-httpx.org/compatibility/#ssl-configuration
      #  verify: ~/.mitmproxy/mitmproxy-ca-cert.cer
      #
      # uncomment below section if you want to use a proxyq see: SOCKS proxies
      #   https://2.python-requests.org/en/latest/user/advanced/#proxies
      # are also supported: see
      #   https://2.python-requests.org/en/latest/user/advanced/#socks
      #
      #  proxies:
      #    all://:
      #      - http://proxy1:8080
      #      - http://proxy2:8080
      #
      #  using_tor_proxy: true
      #
      # Extra seconds to add in order to account for the time taken by the proxy
      #
      #  extra_proxy_timeout: 10

redis:
  enabled: false
